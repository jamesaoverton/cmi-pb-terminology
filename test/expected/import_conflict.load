|json({"value": "BOB", "valid": false, "messages": [{"rule": "key:foreign", "level": "error", "message": "Value BOB of column source is not in prefix.prefix"}]})||json({"value": "VO:0000001", "valid": false, "messages": [{"rule": "key:unique", "level": "error", "message": "Values of id must be unique"}]})||json({"value": "vaccine", "valid": false, "messages": [{"rule": "key:primary", "level": "error", "message": "Values of label must be unique"}, {"rule": "tree:child-unique", "level": "error", "message": "Values of label must be unique"}]})|owl:Class|json({"valid": true, "messages": []})|material entity|json({"valid": true, "messages": []})
|json({"value": "CO B", "valid": false, "messages": [{"rule": "key:foreign", "level": "error", "message": "Value CO B of column source is not in prefix.prefix"}, {"rule": "datatype:nonspace", "level": "error", "message": "source should be text without whitespace"}, {"rule": "datatype:word", "level": "error", "message": "source should be a single word: letters, numbers, underscore"}]})||json({"value": "COB:0000013", "valid": false, "messages": [{"rule": "key:unique", "level": "error", "message": "Values of id must be unique"}]})|molecular dentity|json({"valid": true, "messages": []})|owl:Class|json({"valid": true, "messages": []})|material entity|json({"valid": true, "messages": []})
